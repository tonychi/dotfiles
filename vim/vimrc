set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

"
" My Bundles here:
" 
"Bundle 'tonychi/vim-debug'
"
Plugin 'kien/ctrlp.vim'
Plugin 'Lokaltog/vim-powerline'
Plugin 'The-NERD-tree'
Plugin 'taglist.vim'
Plugin  'Gundo'

Plugin 'tomasr/molokai'
Plugin 'othree/html5.vim'
Plugin 'othree/javascript-libraries-syntax.vim'

Plugin 'plasticboy/vim-markdown'
Plugin 'rizzatti/dash.vim'

Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'

Plugin 'godlygeek/tabular'

Plugin 'chriskempson/vim-tomorrow-theme'
Plugin 'motemen/git-vim'


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

"配色方案
color desert
"color molokai

set t_Co=256
set t_ut=

if has("gui_running")
  " 默认窗体宽度和高度
  set columns=150
  set lines=75
  
  " 去除工具栏显示
  set guioptions-=T
  "set guioptions-=m
  " 隐藏左右下不滚动条
  set guioptions-=L
  set guioptions-=r
  set guioptions-=b
  
  "使用鼠标
  set mouse=a

  "set cursorcolumn
  set cursorline
  hi cursorline guibg=#000000
  
endif

"自动补全命令使用菜单挂起列表显示
set wildmenu

"总是显示状态栏
set laststatus=2

"启用搜索高亮
set hlsearch
set incsearch

"禁止搜索时两端循环
"set nowrapscan

set ruler

set linespace=0

"启用行号显示
set number
set numberwidth=5

set scrolloff=5

"启用输入命令自动显示
set showcmd
set showmode
set showmatch

"编码设置
set enc=utf-8
set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936

"允许退格键删除
set backspace=2

"取消自动换行
set nowrap
set textwidth=100
"整词换行
set linebreak

"自动缩进
set autoindent
set smartindent
set cindent

"设置Tab长度
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab

"保留最后50条命令记录
set history=50

"set clipboard=unnamedplus

"启用语法侦测
syntax on

"
" Auto Command
"

autocmd FileType python set foldmethod=indent foldlevel=99
autocmd FileType python set cursorcolumn
"autocmd FileType python setlocal et sta sw=4 sts=4
autocmd! bufwritepost vimrc source ~/.vimrc

autocmd FileType mkd.markdown set textwidth=120 tabstop=3 shiftwidth=3 softtabstop=3

"
" Key mapping
"

let mapleader=","
imap jj <esc>

nnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>

nnoremap <Leader>e :e ~/.vimrc<CR>
nnoremap <Leader>s :source ~/.vimrc<CR>

nnoremap <Leader>n :NERDTreeToggle<CR>
nnoremap <Leader>t :TlistToggle<CR>
nnoremap <Leader>u :GundoToggle<CR>

nnoremap <Leader>jl <C-w>l
nnoremap <Leader>jh <C-w>h
nnoremap <Leader>jk <C-w>k
nnoremap <Leader>jj <C-w>j

nnoremap <Leader>tt :tabnew<CR>
nnoremap <Leader>tc :tabclose<CR>
nnoremap <Leader>tn :tabnext<CR>
nnoremap <Leader>tp :tabprevious<CR>
nnoremap <Leader>tf :tabfirst<CR>
nnoremap <Leader>tl :tablast<CR>

"
" Python, Vim-Debug
"
nnoremap <C-F5> :Dbg .<CR>
nnoremap <F5> :Dbg run<CR>
nnoremap <F6> :Dbg quit<CR>
nnoremap <F9> :Dbg break<CR>
nnoremap <F10> :Dbg over<CR>
nnoremap <F11> :Dbg into<CR>
nnoremap <C-F11> :Dbg out<CR>

"
" Plugin Config
"
"""""""""""""""""""""""
"
"  CtrlP
"
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_map = ',,'
let g:ctrlp_open_multiple_files = 'v'
let g:ctrlp_by_filename = 1

set wildignore+=*/tmp/*,*.so,*.swp,*.zip
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git)$',
  \ 'file': '\v\.(log|jpg|png|jpeg)$'
  \ }

"
" NERDTree
"
let g:NERDTreeWinSize=30
let g:NERDTreeShowBookmarks=1

"
" Tlist
"
let g:Tlist_Use_Right_Window = 1

"
" tabular
"
" nmap <Leader>a= :Tabularize /=<CR>
" vmap <Leader>a= :Tabularize /=<CR>
" nmap <Leader>a: :Tabularize /:\zs<CR>
" vmap <Leader>a: :Tabularize /:\zs<CR>
" 
" nmap <Leader>a| :Tabularize /:\zs<CR>
" vmap <Leader>a| :Tabularize /:\zs<CR>

"
" vim-markdown
"
let g:vim_markdown_folding_disabled=1

